//  MOTOR CONTROLLERS FOR BOTH TALON SRX + SPARKS WORK!!!!!!
//  USE AS TEMPLATE - DO NOT ALTER!!!!
//
//
//
//                  DO NOT ALTER!!!!!
//
//
//
//


// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.TimedRobot;

/**
 * The VM is configured to automatically run this class, and to call the functions corresponding to
 * each mode, as described in the TimedRobot documentation. If you change the name of this class or
 * the package after creating this project, you must also update the build.gradle file in the
 * project.
 */
public class Robot extends TimedRobot {

  TalonSRX RM1 = new TalonSRX(1); // Change '0' to match device ID in Tuner.  Use VictorSPX for Victor SPXs
  TalonSRX LM1 = new TalonSRX(2); // Change '0' to match device ID in Tuner.  Use VictorSPX for Victor SPXs
  
  CANSparkMax RM2 = new CANSparkMax(3, MotorType.kBrushed); // wrong id!!
  CANSparkMax LM2 = new CANSparkMax(4, MotorType.kBrushed);
 
  Joystick joy1 = new Joystick(0);

  /**
   * This function is run when the robot is first started up and should be used for any
   * initialization code.
   */
  @Override
  public void robotInit() {  }

  @Override
  public void robotPeriodic() {}

  @Override
  public void autonomousInit() {
  }

  @Override
  public void autonomousPeriodic() {}

  @Override
  public void teleopInit() {}

  @Override
  public void teleopPeriodic() {
    double stick = joy1.getRawAxis(1);
    RM1.set(ControlMode.PercentOutput, stick);
    LM1.set(ControlMode.PercentOutput, stick);
    RM2.set(-stick);
    LM2.set(stick);
  }

  @Override
  public void disabledInit() {}

  @Override
  public void disabledPeriodic() {}

  @Override
  public void testInit() {}

  @Override
  public void testPeriodic() {}
}
